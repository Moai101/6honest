[{"/Users/hattoriakitsugu/Desktop/6honest/web/src/index.tsx":"1","/Users/hattoriakitsugu/Desktop/6honest/web/src/reportWebVitals.ts":"2","/Users/hattoriakitsugu/Desktop/6honest/web/src/store.ts":"3","/Users/hattoriakitsugu/Desktop/6honest/web/src/states/state.ts":"4","/Users/hattoriakitsugu/Desktop/6honest/web/src/actions/action.ts":"5","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Home/Home.tsx":"6","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Auth/SignIn.tsx":"7","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Auth/SignUp.tsx":"8","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/New/New.tsx":"9","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/New/elements/css/style.js":"10","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Edit/Edit.tsx":"11","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Edit/elements/css/style.js":"12"},{"size":1431,"mtime":1607505859394,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607086002861,"results":"15","hashOfConfig":"14"},{"size":1018,"mtime":1607506378454,"results":"16","hashOfConfig":"14"},{"size":631,"mtime":1607502400261,"results":"17","hashOfConfig":"14"},{"size":310,"mtime":1607502313971,"results":"18","hashOfConfig":"14"},{"size":2813,"mtime":1607503334838,"results":"19","hashOfConfig":"14"},{"size":2162,"mtime":1607178336498,"results":"20","hashOfConfig":"14"},{"size":2724,"mtime":1607175882831,"results":"21","hashOfConfig":"14"},{"size":12995,"mtime":1607517384599,"results":"22","hashOfConfig":"14"},{"size":202,"mtime":1607514643495,"results":"23","hashOfConfig":"14"},{"size":13665,"mtime":1607520905264,"results":"24","hashOfConfig":"14"},{"size":202,"mtime":1607517852834,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"e5hbgk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/hattoriakitsugu/Desktop/6honest/web/src/index.tsx",[],["57","58"],"/Users/hattoriakitsugu/Desktop/6honest/web/src/reportWebVitals.ts",[],"/Users/hattoriakitsugu/Desktop/6honest/web/src/store.ts",["59"],"import { combineReducers, createStore, compose, applyMiddleware } from 'redux';\nimport { reducer, state } from './states/state';\nimport thunk from \"redux-thunk\"\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n\nexport type AppState = {\n  state: state\n};\n\n\n// 永続化の設定\nconst persistConfig = {\n  key: 'root', // Storageに保存されるキー名を指定する\n  storage, // 保存先としてlocalStorageがここで設定される\n  whitelist: ['params'] // Stateは`todos`のみStorageに保存する\n  // blacklist: ['visibilityFilter'] // `visibilityFilter`は保存しない\n}\n\n// 永続化設定されたReducerとして定義\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n\nconst storeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst store = createStore(\n  persistedReducer,\n  storeEnhancers(applyMiddleware(thunk))\n);\n\nexport const persistor = persistStore(store)\nexport default store;","/Users/hattoriakitsugu/Desktop/6honest/web/src/states/state.ts",[],"/Users/hattoriakitsugu/Desktop/6honest/web/src/actions/action.ts",[],"/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Home/Home.tsx",[],"/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Auth/SignIn.tsx",["60","61","62","63","64","65","66"],"import React from 'react';\nimport firebase from 'firebase';\nimport env from \"../../env.json\"\nimport { actions } from \"../../actions/action\"\nimport store from \"../../store\"\nimport {\n    Formik,\n    FormikHelpers,\n    FormikProps,\n    Form,\n    Field,\n    FieldProps,\n  } from 'formik';\n\n\n\n\n\n\nconst config = {\n    apiKey: env.apiKey,\n    authDomain: env.authDomain,\n    projectId: env.projectId,\n    storageBucket: env.storageBucket,\n    messagingSenderId: env.messagingSenderId\n  };\n\n\n  if (!firebase.apps.length) {\n    \n    firebase.initializeApp(config);\n\n\n  }\n\ninterface Props {\n\n  history:string[]\n\n}\n\ninterface State {\n    initialValues:{\n        email:string;\n        password:string;\n        confirmPass:string;\n\n    }\n}\n\n  \nexport const db = firebase.firestore();\n\n\nexport class SignIn extends React.Component<Props,State> {\n    constructor(props:Props){\n        super(props)\n        this.state ={\n\n            initialValues:{\n                email:\"\",\n                password:\"\",\n                confirmPass:\"\"\n            }\n        }\n    }\n\n    post(){\n\n      firebase.auth().signOut().then(()=>{\n        console.log(\"ログアウトしました\");\n      })\n      .catch( (error)=>{\n        console.log(`ログアウト時にエラーが発生しました (${error})`);\n      });\n\n\n    }\n\n    render(){\n        return (\n\n            <div>\n\n<Formik\n         initialValues={this.state.initialValues}\n         onSubmit={(values, actions) => {\n\n\n          firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n  .then((user) => {\n\n    this.props.history.push('/')\n\n  })\n  .catch((error) => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // ..\n  });\n\n\n         }}\n       >\n         <Form>\n           <label htmlFor=\"firstName\">First Name</label>\n           <Field name=\"email\" placeholder=\"Email\" />\n           <label htmlFor=\"firstName\">Pass</label>\n\n           <Field type=\"password\" name=\"password\" placeholder=\"pass\" />\n           <button type=\"submit\">sign in</button>\n         </Form>\n       </Formik>\n       <button onClick={this.post}>out</button>\n                \n          </div>\n\n        )\n    }\n}","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Auth/SignUp.tsx",["67","68","69","70","71","72","73"],"import React from 'react';\nimport firebase from 'firebase';\nimport env from \"../../env.json\"\nimport { actions } from \"../../actions/action\"\nimport store from \"../../store\"\nimport {\n    Formik,\n    FormikHelpers,\n    FormikProps,\n    Form,\n    Field,\n    FieldProps,\n  } from 'formik';\n\n\n\nconst config = {\n    apiKey: env.apiKey,\n    authDomain: env.authDomain,\n    projectId: env.projectId,\n    storageBucket: env.storageBucket,\n    messagingSenderId: env.messagingSenderId\n  };\n\n\n  if (!firebase.apps.length) {\n    \n    firebase.initializeApp(config);\n\n\n  }\n\ninterface Props {\n\n}\n\ninterface State {\n    initialValues:{\n        email:string;\n        password:string;\n        confirmPass:string;\n\n    }\n}\n\n  \nexport const db = firebase.firestore();\n\n\nexport class SignUp extends React.Component<Props,State> {\n    constructor(props:Props){\n        super(props)\n        this.state ={\n\n            initialValues:{\n                email:\"\",\n                password:\"\",\n                confirmPass:\"\"\n\n            }\n            \n        }\n    }\n\n    render(){\n        return (\n\n            <div>\n\n<Formik\n         initialValues={this.state.initialValues}\n         onSubmit={(values, actions) => {\n             if(values.password === values.confirmPass){\n                let params = {\n                    email:values.email,\n                    password:values.password\n                }\n\n                \n                firebase.auth().createUserWithEmailAndPassword(params.email, params.password).then(function(res){\n                  db.collection(\"users\").doc(res.user?.uid).set({\n                    uid: res.user?.uid,\n                    createdAt: Date.now()\n\n                })\n                .then(function() {\n                    console.log(\"Document successfully written!\");\n                })\n                .catch(function(error) {\n                    console.error(\"Error writing document: \", error);\n                });\n              })\n               .catch((error) => {\n                 var errorCode = error.code;\n                 var errorMessage = error.message;\n                 // ..\n               });\n\n             }else{\n                 alert(\"test\")\n             }\n\n         }}\n       >\n         <Form>\n           <label htmlFor=\"firstName\">First Name</label>\n           <Field name=\"email\" placeholder=\"Email\" />\n           <label htmlFor=\"firstName\">Pass</label>\n\n           <Field type=\"password\" name=\"password\" placeholder=\"pass\" />\n           <label htmlFor=\"firstName\">confirmPass</label>\n\n           <Field name=\"confirmPass\" placeholder=\"confirm\" />\n\n           <button type=\"submit\">sign up</button>\n         </Form>\n       </Formik>\n                \n          </div>\n\n        )\n    }\n}","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/New/New.tsx",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"import React from 'react';\nimport firebase from 'firebase';\nimport env from \"../../env.json\"\nimport { actions } from \"../../actions/action\"\nimport store from \"../../store\"\nimport { Chip, \n  TextField, \n  Button, \n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select\n\n } from '@material-ui/core';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport {\n    Formik,\n    FormikHelpers,\n    FormikProps,\n    Form,\n    Field,\n    FieldProps,\n  } from 'formik';\nimport { \n  Box, \n  BoxContainer,\n  Margin\n } from \"./elements/css/style\"\n\n\n\nconst config = {\n    apiKey: env.apiKey,\n    authDomain: env.authDomain,\n    projectId: env.projectId,\n    storageBucket: env.storageBucket,\n    messagingSenderId: env.messagingSenderId\n  };\n\n\n  if (!firebase.apps.length) {\n    \n    firebase.initializeApp(config);\n\n\n  }\n\n  interface Props {\n\n    history:string[]\n  \n  }\n\n\n  interface State {\n    text:string;\n    title:string;\n    whenList:string[];\n    whereList:string[];\n    whoList:string[];\n    whatList:string[];\n    whyList:string[];\n    howList:string[];\n    resultList:string[];\n    whenNumber:number,\n    whereNumber:number,\n    whoNumber:number,\n    whatNumber:number,\n    whyNumber:number,\n    howNumber:number,\n    resultNumber:number;\n    open: boolean,\n    w:string;\n    memo:string;\n    people:{\n      when:string,\n      where:string,\n      who:string,\n      what:string,\n      why:string,\n      how:string,\n      result:string\n    }[]\n\n\n  }\n\n  interface ChipData {\n    label: string;\n  }\nexport const db = firebase.firestore();\n\n\nconst formControl = {\n  minWidth: 120,\n}\n\n\n\nexport class New extends React.Component<Props,State>{\n\n\n\n  constructor(props:Props){\n    super(props)\n    this.state = {\n    whenList:[],\n    whereList:[],\n    whoList:[],\n    whatList:[],\n    whyList:[],\n    howList:[],\n    resultList:[],\n    text:\"\",\n    title:\"\",\n    whenNumber:0,\n    whereNumber:0,\n    whoNumber:0,\n    whatNumber:0,\n    whyNumber:0,\n    howNumber:0,\n    resultNumber:0,\n    open: false,\n    w:\"\",\n    memo:\"\",\n    people:[]\n\n    }\n  }\n\n   async post(){\n    var user = firebase.auth().currentUser;\n    var uid = user?.uid\n       const result = await db.collection(\"5w1h\").add({\n            title:this.state.title,\n            when:this.state.whenList,\n            where:this.state.whereList,\n            who:this.state.whoList,\n            what:this.state.whatList,\n            why:this.state.whatList,\n            how:this.state.howList,\n            result:this.state.resultList,\n            memo:this.state.memo,\n            uid:uid\n\n        })\n        console.log(result)\n\n    }\n\n    handleClose(){\n      this.setState({open:false})\n\n    }\n\n    handleOpen() {\n      this.setState({open:true})\n    }\n    \n\n    addText(){\n\n      switch(this.state.w){\n        case 'when':\n          this.state.whenList.push(this.state.text)\n          this.setState({whenList:this.state.whenList})\n          this.setState({whenNumber:this.state.whenList.length-1})\n          this.setState({text:\"\"})\n          break;\n        case 'where':\n          this.state.whereList.push(this.state.text)\n          this.setState({whereList:this.state.whereList})\n          this.setState({whereNumber:this.state.whereList.length-1})\n          this.setState({text:\"\"})\n          break;\n          case 'who':\n            this.state.whoList.push(this.state.text)\n            this.setState({whoList:this.state.whoList})\n            this.setState({whoNumber:this.state.whoList.length-1})\n            this.setState({text:\"\"})\n            break;\n          case 'what':\n              this.state.whatList.push(this.state.text)\n              this.setState({whatList:this.state.whatList})\n              this.setState({whatNumber:this.state.whatList.length-1})\n              this.setState({text:\"\"})\n              break;\n          case 'why':\n                this.state.whyList.push(this.state.text)\n                this.setState({whyList:this.state.whyList})\n                this.setState({whyNumber:this.state.whyList.length-1})\n                this.setState({text:\"\"})\n                break;\n          case 'how':\n                  this.state.howList.push(this.state.text)\n                  this.setState({howList:this.state.howList})\n                  this.setState({whatNumber:this.state.howList.length-1})\n                  this.setState({text:\"\"})\n                  break;\n         case 'result':\n                    this.state.resultList.push(this.state.text)\n                    this.setState({resultList:this.state.resultList})\n                    this.setState({resultNumber:this.state.resultList.length-1})\n                    this.setState({text:\"\"})\n                    break;\n         case '':\n           alert(\"select\")\n\n      }\n\n\n\n    }\n\n    handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n      this.setState({w:event.target.value as string});\n    };\n\n    handleW = (params:{w:string,data:string}) => {\n\n      switch(params.w){\n        case 'when':\n          this.setState({whenNumber:this.state.whenList.indexOf(params.data)})\n          break;\n          case 'where':\n            this.setState({whereNumber:this.state.whereList.indexOf(params.data)})\n            break;\n          case 'who':\n              this.setState({whoNumber:this.state.whoList.indexOf(params.data)})\n              break;\n          case 'what':\n                this.setState({whatNumber:this.state.whatList.indexOf(params.data)})\n                break;\n          case 'why':\n                  this.setState({whyNumber:this.state.whyList.indexOf(params.data)})\n                  break;\n          case \"how\":\n              this.setState({howNumber:this.state.howList.indexOf(params.data)})\n              break;\n          case \"result\":\n            this.setState({resultNumber:this.state.resultList.indexOf(params.data)})\n            break;\n            \n\n      }\n\n\n\n\n    }\n\n    handleDelete(params:{w:string,data:string}){\n\n      switch(params.w){\n        case 'when':\n          var res = this.state.whenList.filter(function(a) {\n            return a !== params.data;\n          });\n            this.setState({whenList:res})\n          break;\n          case 'where':\n            var res = this.state.whereList.filter(function(a) {\n              return a !== params.data;\n            });\n              this.setState({whereList:res})\n            break;\n          case 'who':\n            var res = this.state.whoList.filter(function(a) {\n              return a !== params.data;\n            });\n              this.setState({whoList:res})\n              break;\n          case 'what':\n            var res = this.state.whatList.filter(function(a) {\n              return a !== params.data;\n            });\n              this.setState({whatList:res})\n                break;\n          case 'why':\n            var res = this.state.whyList.filter(function(a) {\n              return a !== params.data;\n            });\n              this.setState({whyList:res})\n                  break;\n          case \"how\":\n            var res = this.state.howList.filter(function(a) {\n              return a !== params.data;\n            });\n              this.setState({howList:res})\n              break;\n          case \"result\":\n            var res = this.state.resultList.filter(function(a) {\n              return a !== params.data;\n            });\n              this.setState({resultList:res})\n            break;\n            \n\n      }\n\n\n  };\n\n    render(){\n\n        return (\n\n            <div>\n              <Margin>\n\n\n<div>\n<TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Enter title\"\n          value={this.state.title} \n          onChange={event => {\n            const { value } = event.target;\n            this.setState({ title: value });\n          }}\n          rowsMax={4}\n        />\n</div>\n\n\n          <div>\n                    <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Enter text\"\n          multiline\n          value={this.state.text} \n          onChange={event => {\n            const { value } = event.target;\n            this.setState({ text: value });\n          }}\n          rowsMax={4}\n        />\n            <FormControl\n            style={formControl}\n            >\n        <InputLabel id=\"demo-controlled-open-select-label\">select</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={this.state.open}\n          onClose={this.handleClose.bind(this)}\n          onOpen={this.handleOpen.bind(this)}\n          value={this.state.w}\n          onChange={this.handleChange}\n        >\n          <MenuItem value={\"when\"}>When</MenuItem>\n          <MenuItem value={\"where\"}>Where</MenuItem>\n          <MenuItem value={\"who\"}>Who</MenuItem>\n          <MenuItem value={\"what\"}>What</MenuItem>\n          <MenuItem value={\"why\"}>Why</MenuItem>\n          <MenuItem value={\"how\"}>How</MenuItem>\n          <MenuItem value={\"result\"}>Result</MenuItem>\n        </Select>\n      </FormControl>\n        <Button \n        onClick={this.addText.bind(this)}\n        variant=\"contained\" \n        color=\"primary\">\n  Primary\n</Button>\n                    <BoxContainer>\n                      <Box>\n                      <h3>When:{this.state.whenList[this.state.whenNumber]}</h3>\n                      </Box>\n                      <Box>\n                      {this.state.whenList.map((data) => {\n        return (\n                        <Chip\n              label={data}\n              onClick={() => this.handleW({w:\"when\",data:data})}\n              onDelete={() => this.handleDelete({w:'when',data:data})}\n            />\n\n        );\n      })}\n                      </Box>\n       </BoxContainer>\n       <BoxContainer>\n       <Box>\n       <h3>Where:{this.state.whereList[this.state.whereNumber]}</h3>\n       </Box>\n       <Box>\n       {this.state.whereList.map((data) => {\n        return (\n                        <Chip\n              label={data}\n              onClick={() => this.handleW({w:\"where\",data:data})}\n              onDelete={() => this.handleDelete({w:'where',data:data})}\n            />\n\n        );\n      })}\n       </Box>\n\n       </BoxContainer>\n       <BoxContainer>\n       <Box>\n       <h3>Who:{this.state.whoList[this.state.whoNumber]}</h3>\n       </Box>\n       <Box>\n       {this.state.whoList.map((data) => {\n        return (\n                        <Chip\n              label={data}\n              onClick={() => this.handleW({w:\"who\",data:data})}\n              onDelete={() => this.handleDelete({w:'who',data:data})}\n            />\n\n        );\n      })}\n\n       </Box>\n       </BoxContainer>\n       <BoxContainer>\n       <Box>\n       <h3>What:{this.state.whatList[this.state.whatNumber]}</h3>\n       </Box>\n       <Box>\n       {this.state.whatList.map((data) => {\n        return (\n                        <Chip\n              label={data}\n              onClick={() => this.handleW({w:\"what\",data:data})}\n              onDelete={() => this.handleDelete({w:'what',data:data})}\n            />\n\n        );\n      })}\n       </Box>\n\n      \n       </BoxContainer>\n       <BoxContainer>\n       <Box>\n       <h3>Why:{this.state.whyList[this.state.whyNumber]}</h3>\n       </Box>\n       <Box>\n       {this.state.whyList.map((data) => {\n        return (\n                        <Chip\n              label={data}\n              onClick={() => this.handleW({w:\"why\",data:data})}\n              onDelete={() => this.handleDelete({w:'why',data:data})}\n            />\n\n        );\n      })}\n       </Box>\n\n      \n       </BoxContainer>\n       <BoxContainer>\n       <Box>\n       <h3>How:{this.state.howList[this.state.howNumber]}</h3>\n       </Box>\n       <Box>\n       {this.state.howList.map((data) => {\n        return (\n                        <Chip\n              label={data}\n              onClick={() => this.handleW({w:\"how\",data:data})}\n              onDelete={() => this.handleDelete({w:'how',data:data})}\n            />\n\n        );\n      })}\n       </Box>\n    \n      \n       </BoxContainer>\n       <BoxContainer>\n         <Box>\n         <h3>Result:{this.state.resultList[this.state.resultNumber]}</h3>\n         </Box>\n         <Box>\n         {this.state.resultList.map((data) => {\n        return (\n                        <Chip\n              label={data}\n              onClick={() => this.handleW({w:\"result\",data:data})}\n              onDelete={() => this.handleDelete({w:'result',data:data})}\n            />\n\n        );\n      })}\n         </Box>\n\n\n    \n       </BoxContainer>\n          </div>\n          \n                            <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Enter memo\"\n          multiline\n          value={this.state.memo} \n          onChange={event => {\n            const { value } = event.target;\n            this.setState({ memo: value });\n          }}\n        />\n        \n           <div>\n             <Button\n             onClick={this.post.bind(this)}\n             >post</Button>\n\n           </div>\n\n           </Margin>\n\n          </div>\n\n        )\n    }\n}","/Users/hattoriakitsugu/Desktop/6honest/web/src/components/New/elements/css/style.js",[],["92","93"],"/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Edit/Edit.tsx",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"/Users/hattoriakitsugu/Desktop/6honest/web/src/components/Edit/elements/css/style.js",[],["112","113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"122","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"123","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"118","severity":1,"message":"124","line":8,"column":5,"nodeType":"120","messageId":"121","endLine":8,"endColumn":18},{"ruleId":"118","severity":1,"message":"125","line":9,"column":5,"nodeType":"120","messageId":"121","endLine":9,"endColumn":16},{"ruleId":"118","severity":1,"message":"126","line":12,"column":5,"nodeType":"120","messageId":"121","endLine":12,"endColumn":15},{"ruleId":"118","severity":1,"message":"127","line":97,"column":9,"nodeType":"120","messageId":"121","endLine":97,"endColumn":18},{"ruleId":"118","severity":1,"message":"128","line":98,"column":9,"nodeType":"120","messageId":"121","endLine":98,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"123","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"118","severity":1,"message":"124","line":8,"column":5,"nodeType":"120","messageId":"121","endLine":8,"endColumn":18},{"ruleId":"118","severity":1,"message":"125","line":9,"column":5,"nodeType":"120","messageId":"121","endLine":9,"endColumn":16},{"ruleId":"118","severity":1,"message":"126","line":12,"column":5,"nodeType":"120","messageId":"121","endLine":12,"endColumn":15},{"ruleId":"118","severity":1,"message":"127","line":94,"column":22,"nodeType":"120","messageId":"121","endLine":94,"endColumn":31},{"ruleId":"118","severity":1,"message":"128","line":95,"column":22,"nodeType":"120","messageId":"121","endLine":95,"endColumn":34},{"ruleId":"118","severity":1,"message":"122","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"123","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"118","severity":1,"message":"129","line":15,"column":10,"nodeType":"120","messageId":"121","endLine":15,"endColumn":22},{"ruleId":"118","severity":1,"message":"130","line":15,"column":24,"nodeType":"120","messageId":"121","endLine":15,"endColumn":29},{"ruleId":"118","severity":1,"message":"131","line":15,"column":31,"nodeType":"120","messageId":"121","endLine":15,"endColumn":41},{"ruleId":"118","severity":1,"message":"132","line":17,"column":5,"nodeType":"120","messageId":"121","endLine":17,"endColumn":11},{"ruleId":"118","severity":1,"message":"124","line":18,"column":5,"nodeType":"120","messageId":"121","endLine":18,"endColumn":18},{"ruleId":"118","severity":1,"message":"125","line":19,"column":5,"nodeType":"120","messageId":"121","endLine":19,"endColumn":16},{"ruleId":"118","severity":1,"message":"133","line":20,"column":5,"nodeType":"120","messageId":"121","endLine":20,"endColumn":9},{"ruleId":"118","severity":1,"message":"134","line":21,"column":5,"nodeType":"120","messageId":"121","endLine":21,"endColumn":10},{"ruleId":"118","severity":1,"message":"126","line":22,"column":5,"nodeType":"120","messageId":"121","endLine":22,"endColumn":15},{"ruleId":"118","severity":1,"message":"135","line":88,"column":13,"nodeType":"120","messageId":"121","endLine":88,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":262,"column":17,"nodeType":"120","messageId":"138","endLine":262,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":268,"column":17,"nodeType":"120","messageId":"138","endLine":268,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":274,"column":17,"nodeType":"120","messageId":"138","endLine":274,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":280,"column":17,"nodeType":"120","messageId":"138","endLine":280,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":286,"column":17,"nodeType":"120","messageId":"138","endLine":286,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":292,"column":17,"nodeType":"120","messageId":"138","endLine":292,"endColumn":20},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"122","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"129","line":15,"column":10,"nodeType":"120","messageId":"121","endLine":15,"endColumn":22},{"ruleId":"118","severity":1,"message":"130","line":15,"column":24,"nodeType":"120","messageId":"121","endLine":15,"endColumn":29},{"ruleId":"118","severity":1,"message":"131","line":15,"column":31,"nodeType":"120","messageId":"121","endLine":15,"endColumn":41},{"ruleId":"118","severity":1,"message":"132","line":17,"column":5,"nodeType":"120","messageId":"121","endLine":17,"endColumn":11},{"ruleId":"118","severity":1,"message":"124","line":18,"column":5,"nodeType":"120","messageId":"121","endLine":18,"endColumn":18},{"ruleId":"118","severity":1,"message":"125","line":19,"column":5,"nodeType":"120","messageId":"121","endLine":19,"endColumn":16},{"ruleId":"118","severity":1,"message":"133","line":20,"column":5,"nodeType":"120","messageId":"121","endLine":20,"endColumn":9},{"ruleId":"118","severity":1,"message":"134","line":21,"column":5,"nodeType":"120","messageId":"121","endLine":21,"endColumn":10},{"ruleId":"118","severity":1,"message":"126","line":22,"column":5,"nodeType":"120","messageId":"121","endLine":22,"endColumn":15},{"ruleId":"118","severity":1,"message":"135","line":79,"column":13,"nodeType":"120","messageId":"121","endLine":79,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":122,"column":47,"nodeType":"141","messageId":"142","endLine":122,"endColumn":48,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"137","line":283,"column":17,"nodeType":"120","messageId":"138","endLine":283,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":289,"column":17,"nodeType":"120","messageId":"138","endLine":289,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":295,"column":17,"nodeType":"120","messageId":"138","endLine":295,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":301,"column":17,"nodeType":"120","messageId":"138","endLine":301,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":307,"column":17,"nodeType":"120","messageId":"138","endLine":307,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":313,"column":17,"nodeType":"120","messageId":"138","endLine":313,"endColumn":20},{"ruleId":"114","replacedBy":"144"},{"ruleId":"116","replacedBy":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'actions' is defined but never used.","'store' is defined but never used.","'FormikHelpers' is defined but never used.","'FormikProps' is defined but never used.","'FieldProps' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'makeStyles' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ChipData' is defined but never used.","@typescript-eslint/no-redeclare","'res' is already defined.","redeclared","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["148","149"],["146"],["147"],"no-global-assign","no-unsafe-negation",{"messageId":"150","fix":"151","desc":"152"},{"messageId":"153","fix":"154","desc":"155"},"removeEscape",{"range":"156","text":"157"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"158","text":"159"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2050,2051],"",[2050,2050],"\\"]